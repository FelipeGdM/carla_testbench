launch:
  # Carla ROS bridge args
  - arg:
      name: "host"
      default: "localhost"
      description: "IP of the CARLA server"
  - arg:
      name: "port"
      default: "2000"
      description: "TCP port of the CARLA server"
  - arg:
      name: "timeout"
      default: "10"
      description: "Time to wait for a successful connection to the CARLA server"
  - arg:
      name: "passive"
      default: "False"
      description: "When enabled, the ROS bridge will take a backseat and another client must tick the world (only in synchronous mode)"
  - arg:
      name: "synchronous_mode"
      default: "True"
      description: "Enable/disable synchronous mode. If enabled, the ROS bridge waits until the expected data is received for all sensors"
  - arg:
      name: "synchronous_mode_wait_for_vehicle_control_command"
      default: "True"
      description: "When enabled, pauses the tick until a vehicle control is completed (only in synchronous mode)"
  - arg:
      name: "fixed_delta_seconds"
      default: "0.05"
      description: "Simulation time (delta seconds) between simulation steps"
  - arg:
      name: "town"
      default: "Town02"
      description: 'Either use an available CARLA town (eg. "Town01") or an OpenDRIVE file (ending in .xodr)'
  - arg:
      name: "register_all_sensors"
      default: "True"
      description: "Enable/disable the registration of all sensors. If disabled, only sensors spawned by the bridge are registered"

  # # Carla ROS bridge node

  - node:
      pkg: "carla_ros_bridge"
      exec: "bridge"
      name: "carla_ros_bridge"
      remap:
        - from: /carla/ego_vehicle/rgb_front_left/camera_info
          to: /carla/ego_vehicle/rgb_front/left/camera_info
        - from: /carla/ego_vehicle/rgb_front_left/image
          to: /carla/ego_vehicle/rgb_front/left/image_raw
        - from: /carla/ego_vehicle/rgb_front_right/camera_info
          to: /carla/ego_vehicle/rgb_front/right/camera_info
        - from: /carla/ego_vehicle/rgb_front_right/image
          to: /carla/ego_vehicle/rgb_front/right/image_raw

        - from: /carla/ego_vehicle/rgb_back_left/camera_info
          to: /carla/ego_vehicle/rgb_back/left/camera_info
        - from: /carla/ego_vehicle/rgb_back_left/image
          to: /carla/ego_vehicle/rgb_back/left/image_raw
        - from: /carla/ego_vehicle/rgb_back_right/camera_info
          to: /carla/ego_vehicle/rgb_back/right/camera_info
        - from: /carla/ego_vehicle/rgb_back_right/image
          to: /carla/ego_vehicle/rgb_back/right/image_raw

        - from: /carla/ego_vehicle/rgb_left_left/camera_info
          to: /carla/ego_vehicle/rgb_left/left/camera_info
        - from: /carla/ego_vehicle/rgb_left_left/image
          to: /carla/ego_vehicle/rgb_left/left/image_raw
        - from: /carla/ego_vehicle/rgb_left_right/camera_info
          to: /carla/ego_vehicle/rgb_left/right/camera_info
        - from: /carla/ego_vehicle/rgb_left_right/image
          to: /carla/ego_vehicle/rgb_left/right/image_raw

        - from: /carla/ego_vehicle/rgb_right_left/camera_info
          to: /carla/ego_vehicle/rgb_right/left/camera_info
        - from: /carla/ego_vehicle/rgb_right_left/image
          to: /carla/ego_vehicle/rgb_right/left/image_raw
        - from: /carla/ego_vehicle/rgb_right_right/camera_info
          to: /carla/ego_vehicle/rgb_right/right/camera_info
        - from: /carla/ego_vehicle/rgb_right_right/image
          to: /carla/ego_vehicle/rgb_right/right/image_raw
      param:
        - name: "host"
          value: "$(var host)"
        - name: "port"
          value: "$(var port)"
        - name: "timeout"
          value: "$(var timeout)"
        - name: "passive"
          value: "$(var passive)"
        - name: "synchronous_mode"
          value: "$(var synchronous_mode)"
        - name: "synchronous_mode_wait_for_vehicle_control_command"
          value: "$(var synchronous_mode_wait_for_vehicle_control_command)"
        - name: "fixed_delta_seconds"
          value: "$(var fixed_delta_seconds)"
        - name: "town"
          value: "$(var town)"
        - name: "register_all_sensors"
          value: "$(var register_all_sensors)"


  # Spawn vehicle args

  - arg:
      name: "objects_definition_file"
      default: "$(find-pkg-share carla_testbench)/config/objects.json"
      description: "Description of objects to spawn"
  - arg:
      name: "spawn_point_ego_vehicle"
      default: "spawn_ponint"
      description: "Location to spawn ego_vehicle"
  - arg:
      name: "spawn_sensors_only"
      default: "False"
      description: "Only spawn described sensors"

  # Spawn vehicle node

  - node:
      pkg: "carla_spawn_objects"
      exec: "carla_spawn_objects"
      name: "vehicle_spawner"
      param:
        - name: "objects_definition_file"
          value: "$(var objects_definition_file)"
        - name: "spawn_point_ego_vehicle"
          value: "$(var spawn_point_ego_vehicle)"
        - name: "spawn_sensors_only"
          value: "$(var spawn_sensors_only)"
